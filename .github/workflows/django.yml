name: Creative Todo CICD

# Controls when the workflow will run
on:
  # Allows you to call this workflow within another workflow
  workflow_call:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  # Triggered based on the git event type
  push:
    branches: [ main, develop ]
    tags:
      - '!*' # Do not execute on tags
  pull_request:
    branches: [ main, develop ]
    tags:
      - '!*' # Do not execute on tags

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # If you want to test multiple python version(s)
    strategy:
      matrix:
        python-version: ["3.11"] # ["3.8", "3.9", "3.10"]
    services:
      postgres:
        image: postgres:latest
        env:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: postgres
        ports: 
          - '5433:5432'
        # needed because the postgres container does not provide a healthcheck
        options: >-
          --health-cmd pg_isready 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5
    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASS: ${{ secrets.DB_PASS }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it.
      - uses: actions/checkout@v2
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: psycopg2 prerequisites
        run: sudo apt-get install libpq-dev
      - name: Install requirements
        run: pip install -r requirements.txt
      - uses: harmon758/postgresql-action@v1
        with:
          postgresql version: '16'
      - name: Run migrations
        run: |
          python manage.py migrate
      - name: Run tests with coverage
        run: |
          coverage run --source='.' ./manage.py test
          coverage report
      - name: Upload coverage to Code Climate
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CODECLIMATE_REPO_TOKEN }}
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
          ./cc-test-reporter format-coverage -t coverage.py .coverage/lcov.info
          ./cc-test-reporter upload-coverage
