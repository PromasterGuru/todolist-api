name: Creative Todo CICD

on:
  workflow_call:
  workflow_dispatch:
  push:
    branches: [main, develop]
    tags:
      - '!*'
  pull_request:
    branches: [main, develop]
    tags:
      - '!*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - '5433:5432'
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASS: ${{ secrets.DB_PASS }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: psycopg2 prerequisites
        run: sudo apt-get install libpq-dev
      - name: Install requirements
        run: pip install -r requirements.txt
      - uses: harmon758/postgresql-action@v1
        with:
          postgresql version: '16'
      - name: Run migrations
        run: |
          python manage.py makemigrations
          python manage.py migrate
      - name: Run tests with coverage.py
        run: |
          coverage run --source='.' manage.py test
          coverage report
          coverage xml -o coverage.xml
      - name: Upload coverage to Code Climate
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CODECLIMATE_REPO_TOKEN }}
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
          ./cc-test-reporter before-build
          ./cc-test-reporter format-coverage -t coverage.py -o codeclimate.json < coverage.xml
          ./cc-test-reporter upload-coverage -i codeclimate.json
